name: Pre-release

on:
  push:
    tags:
    - 'pre*'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}
        fetch-depth: 0
    - name: Download sapmachine JDK 11
      run: |
        download_url="https://github.com/SAP/SapMachine/releases/download/sapmachine-11.0.11%2B8/sapmachine-jdk-11.0.11-ea.8_linux-x64_bin.tar.gz"
        wget -O "${RUNNER_TEMP}/sapmachine-jdk-11.0.11.tar.gz" "${download_url}"
    - name: Setup sapmachine JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'jdkfile'
        jdkFile: ${{ runner.temp }}/sapmachine-jdk-11.0.11.tar.gz
        java-version: '11.0.11'
        architecture: x64
    - name: Set XSK Version
      run: echo XSK_VERSION=${GITHUB_REF#refs/*/} | tr pre " " | sed 's/   //'  >> $GITHUB_ENV
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: amd64,arm64
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        install: true
    - name: Maven Build
      run: mvn clean install
    - name: Docker Login
      run: docker login -u ${{secrets.DOCKER_USER}} -p ${{secrets.DOCKER_PASSWORD}}
    - name: Push XSK
      run: |
        cd releng/server
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t dirigiblelabs/xsk:${{ env.XSK_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push dirigiblelabs/xsk:${{ env.XSK_VERSION }}
        cd ../../
    - name: Push XSK for SAP Cloud Foundry
      run: |
        cd releng/sap-cf
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t dirigiblelabs/xsk-cf:${{ env.XSK_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push dirigiblelabs/xsk-cf:${{ env.XSK_VERSION }}
        cd ../../
    - name: Push XSK for SAP Kyma
      run: |
        cd releng/sap-kyma
        cp -r "${JAVA_HOME}" jdk
        docker build --load -t dirigiblelabs/xsk-kyma:${{ env.XSK_VERSION }} --build-arg JDK_TYPE=external-jdk --build-arg JDK_HOME=jdk .
        docker push dirigiblelabs/xsk-kyma:${{ env.XSK_VERSION }}
        cd ../../
    - uses: buildpacks/github-actions/setup-pack@v4.1.0
    - name: XSK Buildpack
      run: |
        cd releng/buildpacks/xsk/
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-base-xsk . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-xsk dirigiblelabs/buildpacks-stack-base-xsk:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-xsk:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-run-xsk . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-xsk dirigiblelabs/buildpacks-stack-run-xsk:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-xsk:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-build-xsk . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-xsk dirigiblelabs/buildpacks-stack-build-xsk:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-xsk:${{ env.XSK_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-xsk --config ./package.toml
        docker tag dirigiblelabs/buildpacks-xsk dirigiblelabs/buildpacks-xsk:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-xsk:${{ env.XSK_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-xsk --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-xsk dirigiblelabs/buildpacks-builder-xsk:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-xsk:${{ env.XSK_VERSION }}
        cd ../../../../
    - name: XSK Kyma Buildpack
      run: |
        cd releng/buildpacks/xsk-kyma/
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-base-xsk-kyma . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-xsk-kyma dirigiblelabs/buildpacks-stack-base-xsk-kyma:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-xsk-kyma:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-run-xsk-kyma . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-xsk-kyma dirigiblelabs/buildpacks-stack-run-xsk-kyma:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-xsk-kyma:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-build-xsk-kyma . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-xsk-kyma dirigiblelabs/buildpacks-stack-build-xsk-kyma:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-xsk-kyma:${{ env.XSK_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-xsk-kyma --config ./package.toml
        docker tag dirigiblelabs/buildpacks-xsk-kyma dirigiblelabs/buildpacks-xsk-kyma:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-xsk-kyma:${{ env.XSK_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-xsk-kyma --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-xsk-kyma dirigiblelabs/buildpacks-builder-xsk-kyma:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-xsk-kyma:${{ env.XSK_VERSION }}
        cd ../../../../
    - name: XSK Cloud Foundry Buildpack
      run: |
        cd releng/buildpacks/xsk-cf/
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-base-xsk-cf . --target base
        docker tag dirigiblelabs/buildpacks-stack-base-xsk-cf dirigiblelabs/buildpacks-stack-base-xsk-cf:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-base-xsk-cf:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-run-xsk-cf . --target run
        docker tag dirigiblelabs/buildpacks-stack-run-xsk-cf dirigiblelabs/buildpacks-stack-run-xsk-cf:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-run-xsk-cf:${{ env.XSK_VERSION }}
        docker build --load --build-arg XSK_VERSION=${{ env.XSK_VERSION }} -t dirigiblelabs/buildpacks-stack-build-xsk-cf . --target build
        docker tag dirigiblelabs/buildpacks-stack-build-xsk-cf dirigiblelabs/buildpacks-stack-build-xsk-cf:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-stack-build-xsk-cf:${{ env.XSK_VERSION }}
        cd buildpack/
        find *.toml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
        pack buildpack package dirigiblelabs/buildpacks-xsk-cf --config ./package.toml
        docker tag dirigiblelabs/buildpacks-xsk-cf dirigiblelabs/buildpacks-xsk-cf:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-xsk-cf:${{ env.XSK_VERSION }}
        pack builder create dirigiblelabs/buildpacks-builder-xsk-cf --config ./builder.toml
        docker tag dirigiblelabs/buildpacks-builder-xsk-cf dirigiblelabs/buildpacks-builder-xsk-cf:${{ env.XSK_VERSION }}
        docker push dirigiblelabs/buildpacks-builder-xsk-cf:${{ env.XSK_VERSION }}
        cd ../../../../

#----------------Helm Release------------------#
    - id: install-secret-key
      name: Install gpg secret key
      run: |
        cat <(echo -e "${{ secrets.GPG_KEY_HELM }}") | gpg --batch --import  --no-tty --batch --yes
    - name: Helm tool installer
      uses: Azure/setup-helm@v1
    - name: Helm Charts Release - Checkout gh-pages
      run: |
        mkdir charts-temp
        cp -r releng/helm-charts/ charts-temp/
        #### Git Checkout Workaround
        git add .github/
        git add .reuse/
        git add LICENSES/
        git add modules/
        git add releng/
        git add samples/
        git reset --hard
        ####
        git fetch
        git checkout gh-pages
        cp charts/* .
    - name: Helm Charts Release - Set Chart Version - XSK
      run: |
        cd charts-temp/helm-charts/xsk/
        find *.yaml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
        cd ../xsk-kpack/
        find *.yaml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
        cd templates/
        find *.yaml -type f -exec sed -i ''s/#{XSKVersion}#/${{ env.XSK_VERSION }}/g'' {} \;
    - name: Helm Charts Release
      run: |
        cp charts/* charts-temp/helm-charts/
        cd charts-temp/helm-charts/

        gpg --no-tty --batch --export-secret-keys > ~/.gnupg/secring.gpg

        helm package --sign --key "XSK-gpg" --keyring /home/runner/.gnupg/secring.gpg xsk
        helm package --sign --key "XSK-gpg" --keyring /home/runner/.gnupg/secring.gpg xsk-kpack

#------------------Update XSK Instance-------------------#

    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v1
    - name: Setup Kube Config File
      run: |
        mkdir $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" >> $HOME/.kube/config
    - name: Update XSK Instance
      run: kubectl set image deployment/xsk-trial xsk=dirigiblelabs/xsk-kyma:${{ env.XSK_VERSION }} -n xsk-trial

#------------------Update XSK Instance-------------------#

    - name: Slack Notification
      if: ${{ failure() }}
      uses: slackapi/slack-github-action@v1.14.0
      with:
        payload: "{\"type\":\"Pre-release\",\"url\":\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\"}"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
