/*
 * Copyright (c) 2022 SAP SE or an SAP affiliate company and XSK contributors
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Apache License, v2.0
 * which accompanies this distribution, and is available at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * SPDX-FileCopyrightText: 2022 SAP SE or an SAP affiliate company and XSK contributors
 * SPDX-License-Identifier: Apache-2.0
 */
// Generated from com/sap/xsk/parser/hdbdd/core/Cds.g4 by ANTLR 4.3
package com.sap.xsk.parser.hdbdd.core;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CdsLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__15=1, T__14=2, T__13=3, T__12=4, T__11=5, T__10=6, T__9=7, T__8=8, 
		T__7=9, T__6=10, T__5=11, T__4=12, T__3=13, T__2=14, T__1=15, T__0=16, 
		NAMESPACE=17, AS=18, HANA=19, USING=20, ON=21, NULL=22, DEFAULT=23, ASSOCIATION_MIN=24, 
		BOOLEAN=25, ID=26, SEMICOLUMN=27, INTEGER=28, DECIMAL=29, LOCAL_TIME=30, 
		LOCAL_DATE=31, UTC_DATE_TIME=32, UTC_TIMESTAMP=33, STRING=34, VARBINARY=35, 
		TYPE_OF=36, WS=37, LINE_COMMENT=38, LINE_COMMENT2=39, A=40, B=41, C=42, 
		D=43, E=44, F=45, G=46, H=47, I=48, J=49, K=50, L=51, M=52, N=53, O=54, 
		P=55, Q=56, R=57, S=58, T=59, U=60, V=61, W=62, X=63, Y=64, Z=65;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'"
	};
	public static final String[] ruleNames = {
		"T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", 
		"T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "NAMESPACE", 
		"AS", "HANA", "USING", "ON", "NULL", "DEFAULT", "ASSOCIATION_MIN", "BOOLEAN", 
		"ID", "SEMICOLUMN", "INTEGER", "DECIMAL", "LOCAL_TIME", "LOCAL_DATE", 
		"UTC_DATE_TIME", "UTC_TIMESTAMP", "STRING", "VARBINARY", "TYPE_OF", "WS", 
		"LINE_COMMENT", "LINE_COMMENT2", "IdCharacters", "EscapedIdCharactes", 
		"EscapeSequence", "HexDigits", "HexDigit", "Digits", "Digit", "Sign", 
		"DecimalFloatingPointLiteral", "ExponentPart", "ExponentIndicator", "SignedInteger", 
		"LocalDate", "LocalTime", "UTCDateTime", "UTCTimestamp", "Date", "Time", 
		"TimeWithPrecision", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", 
		"K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", 
		"Y", "Z"
	};


	public CdsLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Cds.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 33: STRING_action((RuleContext)_localctx, actionIndex); break;

		case 34: VARBINARY_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void STRING_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  setText(getText().substring(1, getText().length() - 1));  break;
		}
	}
	private void VARBINARY_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1:  setText(getText().substring(1, getText().length() - 1));  break;
		}
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2C\u024b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t"+
		"\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3"+
		"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3"+
		"\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\32\3\32\3\32\5\32\u0109\n\32\3\33\3\33\5\33\u010d\n\33"+
		"\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3#"+
		"\7#\u0120\n#\f#\16#\u0123\13#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\5$\u0130"+
		"\n$\3$\7$\u0133\n$\f$\16$\u0136\13$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3"+
		"%\3&\6&\u0145\n&\r&\16&\u0146\3&\3&\3\'\3\'\3\'\3\'\7\'\u014f\n\'\f\'"+
		"\16\'\u0152\13\'\3\'\5\'\u0155\n\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\7(\u015f"+
		"\n(\f(\16(\u0162\13(\3(\3(\3(\3(\3(\3)\5)\u016a\n)\3)\6)\u016d\n)\r)\16"+
		")\u016e\3)\3)\7)\u0173\n)\f)\16)\u0176\13)\3*\3*\3*\7*\u017b\n*\f*\16"+
		"*\u017e\13*\3*\3*\3+\3+\3+\3+\5+\u0186\n+\3+\5+\u0189\n+\3+\3+\3+\6+\u018e"+
		"\n+\r+\16+\u018f\3+\3+\3+\3+\3+\5+\u0197\n+\3,\3,\3,\7,\u019c\n,\f,\16"+
		",\u019f\13,\3,\5,\u01a2\n,\3-\3-\3.\6.\u01a7\n.\r.\16.\u01a8\3/\3/\3\60"+
		"\3\60\3\61\3\61\3\61\5\61\u01b2\n\61\3\61\5\61\u01b5\n\61\3\61\3\61\3"+
		"\61\5\61\u01ba\n\61\3\62\3\62\3\62\3\63\3\63\3\64\5\64\u01c2\n\64\3\64"+
		"\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67\3\67"+
		"\3\67\3\67\3\67\3\67\3\67\3\67\38\38\38\38\38\38\38\38\38\38\38\38\38"+
		"\38\38\39\39\39\39\39\39\39\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\5:\u0208"+
		"\n:\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\3;\5;\u0216\n;\3<\3<\3=\3=\3>\3>"+
		"\3?\3?\3@\3@\3A\3A\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J"+
		"\3J\3K\3K\3L\3L\3M\3M\3N\3N\3O\3O\3P\3P\3Q\3Q\3R\3R\3S\3S\3T\3T\3U\3U"+
		"\6\u0121\u0150\u0160\u017c\2V\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q\2S\2U\2W\2Y\2[\2"+
		"]\2_\2a\2c\2e\2g\2i\2k\2m\2o\2q\2s\2u\2w*y+{,}-\177.\u0081/\u0083\60\u0085"+
		"\61\u0087\62\u0089\63\u008b\64\u008d\65\u008f\66\u0091\67\u00938\u0095"+
		"9\u0097:\u0099;\u009b<\u009d=\u009f>\u00a1?\u00a3@\u00a5A\u00a7B\u00a9"+
		"C\3\2\'\6\2\f\f\17\17$$^^\6\2\13\f\17\17\"\"^^\4\2C\\c|\n\2$$))^^ddhh"+
		"ppttvv\3\2\62\65\3\2\629\5\2\62;CHch\3\2\62;\4\2GGgg\3\2\66\66\3\2\64"+
		"\64\3\2\639\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4\2HHhh\4\2IIii\4\2JJjj\4"+
		"\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOoo\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSs"+
		"s\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2"+
		"\\\\||\u025b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2"+
		"\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2"+
		"\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2"+
		"\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2"+
		"\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3"+
		"\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2"+
		"\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2w\3\2\2\2\2"+
		"y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083"+
		"\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2"+
		"\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095"+
		"\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2"+
		"\2\2\u009f\3\2\2\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7"+
		"\3\2\2\2\2\u00a9\3\2\2\2\3\u00ab\3\2\2\2\5\u00ad\3\2\2\2\7\u00af\3\2\2"+
		"\2\t\u00b1\3\2\2\2\13\u00b4\3\2\2\2\r\u00b6\3\2\2\2\17\u00b8\3\2\2\2\21"+
		"\u00ba\3\2\2\2\23\u00bc\3\2\2\2\25\u00be\3\2\2\2\27\u00c0\3\2\2\2\31\u00c2"+
		"\3\2\2\2\33\u00c4\3\2\2\2\35\u00c6\3\2\2\2\37\u00c8\3\2\2\2!\u00d1\3\2"+
		"\2\2#\u00d3\3\2\2\2%\u00dd\3\2\2\2\'\u00e0\3\2\2\2)\u00e5\3\2\2\2+\u00eb"+
		"\3\2\2\2-\u00ee\3\2\2\2/\u00f3\3\2\2\2\61\u00fb\3\2\2\2\63\u0108\3\2\2"+
		"\2\65\u010c\3\2\2\2\67\u010e\3\2\2\29\u0110\3\2\2\2;\u0112\3\2\2\2=\u0114"+
		"\3\2\2\2?\u0116\3\2\2\2A\u0118\3\2\2\2C\u011a\3\2\2\2E\u011c\3\2\2\2G"+
		"\u0127\3\2\2\2I\u013a\3\2\2\2K\u0144\3\2\2\2M\u014a\3\2\2\2O\u015a\3\2"+
		"\2\2Q\u0169\3\2\2\2S\u0177\3\2\2\2U\u0196\3\2\2\2W\u0198\3\2\2\2Y\u01a3"+
		"\3\2\2\2[\u01a6\3\2\2\2]\u01aa\3\2\2\2_\u01ac\3\2\2\2a\u01b9\3\2\2\2c"+
		"\u01bb\3\2\2\2e\u01be\3\2\2\2g\u01c1\3\2\2\2i\u01c5\3\2\2\2k\u01ce\3\2"+
		"\2\2m\u01d7\3\2\2\2o\u01e6\3\2\2\2q\u01f5\3\2\2\2s\u01fe\3\2\2\2u\u0209"+
		"\3\2\2\2w\u0217\3\2\2\2y\u0219\3\2\2\2{\u021b\3\2\2\2}\u021d\3\2\2\2\177"+
		"\u021f\3\2\2\2\u0081\u0221\3\2\2\2\u0083\u0223\3\2\2\2\u0085\u0225\3\2"+
		"\2\2\u0087\u0227\3\2\2\2\u0089\u0229\3\2\2\2\u008b\u022b\3\2\2\2\u008d"+
		"\u022d\3\2\2\2\u008f\u022f\3\2\2\2\u0091\u0231\3\2\2\2\u0093\u0233\3\2"+
		"\2\2\u0095\u0235\3\2\2\2\u0097\u0237\3\2\2\2\u0099\u0239\3\2\2\2\u009b"+
		"\u023b\3\2\2\2\u009d\u023d\3\2\2\2\u009f\u023f\3\2\2\2\u00a1\u0241\3\2"+
		"\2\2\u00a3\u0243\3\2\2\2\u00a5\u0245\3\2\2\2\u00a7\u0247\3\2\2\2\u00a9"+
		"\u0249\3\2\2\2\u00ab\u00ac\7<\2\2\u00ac\4\3\2\2\2\u00ad\u00ae\7]\2\2\u00ae"+
		"\6\3\2\2\2\u00af\u00b0\7}\2\2\u00b0\b\3\2\2\2\u00b1\u00b2\7<\2\2\u00b2"+
		"\u00b3\7<\2\2\u00b3\n\3\2\2\2\u00b4\u00b5\7_\2\2\u00b5\f\3\2\2\2\u00b6"+
		"\u00b7\7\177\2\2\u00b7\16\3\2\2\2\u00b8\u00b9\7?\2\2\u00b9\20\3\2\2\2"+
		"\u00ba\u00bb\7B\2\2\u00bb\22\3\2\2\2\u00bc\u00bd\7$\2\2\u00bd\24\3\2\2"+
		"\2\u00be\u00bf\7%\2\2\u00bf\26\3\2\2\2\u00c0\u00c1\7*\2\2\u00c1\30\3\2"+
		"\2\2\u00c2\u00c3\7+\2\2\u00c3\32\3\2\2\2\u00c4\u00c5\7,\2\2\u00c5\34\3"+
		"\2\2\2\u00c6\u00c7\7.\2\2\u00c7\36\3\2\2\2\u00c8\u00c9\7p\2\2\u00c9\u00ca"+
		"\7q\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc\7\"\2\2\u00cc\u00cd\7p\2\2\u00cd"+
		"\u00ce\7w\2\2\u00ce\u00cf\7n\2\2\u00cf\u00d0\7n\2\2\u00d0 \3\2\2\2\u00d1"+
		"\u00d2\7\60\2\2\u00d2\"\3\2\2\2\u00d3\u00d4\5\u0091I\2\u00d4\u00d5\5w"+
		"<\2\u00d5\u00d6\5\u008fH\2\u00d6\u00d7\5\177@\2\u00d7\u00d8\5\u009bN\2"+
		"\u00d8\u00d9\5\u0095K\2\u00d9\u00da\5w<\2\u00da\u00db\5{>\2\u00db\u00dc"+
		"\5\177@\2\u00dc$\3\2\2\2\u00dd\u00de\7c\2\2\u00de\u00df\7u\2\2\u00df&"+
		"\3\2\2\2\u00e0\u00e1\7j\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7p\2\2\u00e3"+
		"\u00e4\7c\2\2\u00e4(\3\2\2\2\u00e5\u00e6\5\u009fP\2\u00e6\u00e7\5\u009b"+
		"N\2\u00e7\u00e8\5\u0087D\2\u00e8\u00e9\5\u0091I\2\u00e9\u00ea\5\u0083"+
		"B\2\u00ea*\3\2\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed\7p\2\2\u00ed,\3\2\2"+
		"\2\u00ee\u00ef\7p\2\2\u00ef\u00f0\7w\2\2\u00f0\u00f1\7n\2\2\u00f1\u00f2"+
		"\7n\2\2\u00f2.\3\2\2\2\u00f3\u00f4\5}?\2\u00f4\u00f5\5\177@\2\u00f5\u00f6"+
		"\5\u0081A\2\u00f6\u00f7\5w<\2\u00f7\u00f8\5\u009fP\2\u00f8\u00f9\5\u008d"+
		"G\2\u00f9\u00fa\5\u009dO\2\u00fa\60\3\2\2\2\u00fb\u00fc\59\35\2\u00fc"+
		"\u00fd\7\60\2\2\u00fd\u00fe\7\60\2\2\u00fe\62\3\2\2\2\u00ff\u0100\7v\2"+
		"\2\u0100\u0101\7t\2\2\u0101\u0102\7w\2\2\u0102\u0109\7g\2\2\u0103\u0104"+
		"\7h\2\2\u0104\u0105\7c\2\2\u0105\u0106\7n\2\2\u0106\u0107\7u\2\2\u0107"+
		"\u0109\7g\2\2\u0108\u00ff\3\2\2\2\u0108\u0103\3\2\2\2\u0109\64\3\2\2\2"+
		"\u010a\u010d\5Q)\2\u010b\u010d\5S*\2\u010c\u010a\3\2\2\2\u010c\u010b\3"+
		"\2\2\2\u010d\66\3\2\2\2\u010e\u010f\7=\2\2\u010f8\3\2\2\2\u0110\u0111"+
		"\5g\64\2\u0111:\3\2\2\2\u0112\u0113\5a\61\2\u0113<\3\2\2\2\u0114\u0115"+
		"\5k\66\2\u0115>\3\2\2\2\u0116\u0117\5i\65\2\u0117@\3\2\2\2\u0118\u0119"+
		"\5m\67\2\u0119B\3\2\2\2\u011a\u011b\5o8\2\u011bD\3\2\2\2\u011c\u0121\7"+
		")\2\2\u011d\u0120\n\2\2\2\u011e\u0120\5U+\2\u011f\u011d\3\2\2\2\u011f"+
		"\u011e\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u0122\3\2\2\2\u0121\u011f\3\2"+
		"\2\2\u0122\u0124\3\2\2\2\u0123\u0121\3\2\2\2\u0124\u0125\7)\2\2\u0125"+
		"\u0126\b#\2\2\u0126F\3\2\2\2\u0127\u0128\5\u00a5S\2\u0128\u0134\7)\2\2"+
		"\u0129\u0130\5w<\2\u012a\u0130\5y=\2\u012b\u0130\5{>\2\u012c\u0130\5}"+
		"?\2\u012d\u0130\5\177@\2\u012e\u0130\5\u0081A\2\u012f\u0129\3\2\2\2\u012f"+
		"\u012a\3\2\2\2\u012f\u012b\3\2\2\2\u012f\u012c\3\2\2\2\u012f\u012d\3\2"+
		"\2\2\u012f\u012e\3\2\2\2\u0130\u0133\3\2\2\2\u0131\u0133\59\35\2\u0132"+
		"\u012f\3\2\2\2\u0132\u0131\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2"+
		"\2\2\u0134\u0135\3\2\2\2\u0135\u0137\3\2\2\2\u0136\u0134\3\2\2\2\u0137"+
		"\u0138\7)\2\2\u0138\u0139\b$\3\2\u0139H\3\2\2\2\u013a\u013b\7v\2\2\u013b"+
		"\u013c\7{\2\2\u013c\u013d\7r\2\2\u013d\u013e\7g\2\2\u013e\u013f\3\2\2"+
		"\2\u013f\u0140\5K&\2\u0140\u0141\7q\2\2\u0141\u0142\7h\2\2\u0142J\3\2"+
		"\2\2\u0143\u0145\t\3\2\2\u0144\u0143\3\2\2\2\u0145\u0146\3\2\2\2\u0146"+
		"\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0148\3\2\2\2\u0148\u0149\b&"+
		"\4\2\u0149L\3\2\2\2\u014a\u014b\7\61\2\2\u014b\u014c\7\61\2\2\u014c\u0150"+
		"\3\2\2\2\u014d\u014f\13\2\2\2\u014e\u014d\3\2\2\2\u014f\u0152\3\2\2\2"+
		"\u0150\u0151\3\2\2\2\u0150\u014e\3\2\2\2\u0151\u0154\3\2\2\2\u0152\u0150"+
		"\3\2\2\2\u0153\u0155\7\17\2\2\u0154\u0153\3\2\2\2\u0154\u0155\3\2\2\2"+
		"\u0155\u0156\3\2\2\2\u0156\u0157\7\f\2\2\u0157\u0158\3\2\2\2\u0158\u0159"+
		"\b\'\4\2\u0159N\3\2\2\2\u015a\u015b\7\61\2\2\u015b\u015c\7,\2\2\u015c"+
		"\u0160\3\2\2\2\u015d\u015f\13\2\2\2\u015e\u015d\3\2\2\2\u015f\u0162\3"+
		"\2\2\2\u0160\u0161\3\2\2\2\u0160\u015e\3\2\2\2\u0161\u0163\3\2\2\2\u0162"+
		"\u0160\3\2\2\2\u0163\u0164\7,\2\2\u0164\u0165\7\61\2\2\u0165\u0166\3\2"+
		"\2\2\u0166\u0167\b(\4\2\u0167P\3\2\2\2\u0168\u016a\t\4\2\2\u0169\u0168"+
		"\3\2\2\2\u016a\u0174\3\2\2\2\u016b\u016d\t\4\2\2\u016c\u016b\3\2\2\2\u016d"+
		"\u016e\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0173\3\2"+
		"\2\2\u0170\u0173\59\35\2\u0171\u0173\7a\2\2\u0172\u016c\3\2\2\2\u0172"+
		"\u0170\3\2\2\2\u0172\u0171\3\2\2\2\u0173\u0176\3\2\2\2\u0174\u0172\3\2"+
		"\2\2\u0174\u0175\3\2\2\2\u0175R\3\2\2\2\u0176\u0174\3\2\2\2\u0177\u017c"+
		"\7$\2\2\u0178\u017b\n\2\2\2\u0179\u017b\5U+\2\u017a\u0178\3\2\2\2\u017a"+
		"\u0179\3\2\2\2\u017b\u017e\3\2\2\2\u017c\u017d\3\2\2\2\u017c\u017a\3\2"+
		"\2\2\u017d\u017f\3\2\2\2\u017e\u017c\3\2\2\2\u017f\u0180\7$\2\2\u0180"+
		"T\3\2\2\2\u0181\u0182\7^\2\2\u0182\u0197\t\5\2\2\u0183\u0188\7^\2\2\u0184"+
		"\u0186\t\6\2\2\u0185\u0184\3\2\2\2\u0185\u0186\3\2\2\2\u0186\u0187\3\2"+
		"\2\2\u0187\u0189\t\7\2\2\u0188\u0185\3\2\2\2\u0188\u0189\3\2\2\2\u0189"+
		"\u018a\3\2\2\2\u018a\u0197\t\7\2\2\u018b\u018d\7^\2\2\u018c\u018e\7w\2"+
		"\2\u018d\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f\u018d\3\2\2\2\u018f\u0190"+
		"\3\2\2\2\u0190\u0191\3\2\2\2\u0191\u0192\5Y-\2\u0192\u0193\5Y-\2\u0193"+
		"\u0194\5Y-\2\u0194\u0195\5Y-\2\u0195\u0197\3\2\2\2\u0196\u0181\3\2\2\2"+
		"\u0196\u0183\3\2\2\2\u0196\u018b\3\2\2\2\u0197V\3\2\2\2\u0198\u01a1\5"+
		"Y-\2\u0199\u019c\5Y-\2\u019a\u019c\7a\2\2\u019b\u0199\3\2\2\2\u019b\u019a"+
		"\3\2\2\2\u019c\u019f\3\2\2\2\u019d\u019b\3\2\2\2\u019d\u019e\3\2\2\2\u019e"+
		"\u01a0\3\2\2\2\u019f\u019d\3\2\2\2\u01a0\u01a2\5Y-\2\u01a1\u019d\3\2\2"+
		"\2\u01a1\u01a2\3\2\2\2\u01a2X\3\2\2\2\u01a3\u01a4\t\b\2\2\u01a4Z\3\2\2"+
		"\2\u01a5\u01a7\t\t\2\2\u01a6\u01a5\3\2\2\2\u01a7\u01a8\3\2\2\2\u01a8\u01a6"+
		"\3\2\2\2\u01a8\u01a9\3\2\2\2\u01a9\\\3\2\2\2\u01aa\u01ab\t\t\2\2\u01ab"+
		"^\3\2\2\2\u01ac\u01ad\7/\2\2\u01ad`\3\2\2\2\u01ae\u01af\5g\64\2\u01af"+
		"\u01b1\7\60\2\2\u01b0\u01b2\5[.\2\u01b1\u01b0\3\2\2\2\u01b1\u01b2\3\2"+
		"\2\2\u01b2\u01b4\3\2\2\2\u01b3\u01b5\5c\62\2\u01b4\u01b3\3\2\2\2\u01b4"+
		"\u01b5\3\2\2\2\u01b5\u01ba\3\2\2\2\u01b6\u01b7\5g\64\2\u01b7\u01b8\5c"+
		"\62\2\u01b8\u01ba\3\2\2\2\u01b9\u01ae\3\2\2\2\u01b9\u01b6\3\2\2\2\u01ba"+
		"b\3\2\2\2\u01bb\u01bc\5e\63\2\u01bc\u01bd\5g\64\2\u01bdd\3\2\2\2\u01be"+
		"\u01bf\t\n\2\2\u01bff\3\2\2\2\u01c0\u01c2\5_\60\2\u01c1\u01c0\3\2\2\2"+
		"\u01c1\u01c2\3\2\2\2\u01c2\u01c3\3\2\2\2\u01c3\u01c4\5[.\2\u01c4h\3\2"+
		"\2\2\u01c5\u01c6\7f\2\2\u01c6\u01c7\7c\2\2\u01c7\u01c8\7v\2\2\u01c8\u01c9"+
		"\7g\2\2\u01c9\u01ca\3\2\2\2\u01ca\u01cb\7)\2\2\u01cb\u01cc\5q9\2\u01cc"+
		"\u01cd\7)\2\2\u01cdj\3\2\2\2\u01ce\u01cf\7v\2\2\u01cf\u01d0\7k\2\2\u01d0"+
		"\u01d1\7o\2\2\u01d1\u01d2\7g\2\2\u01d2\u01d3\3\2\2\2\u01d3\u01d4\7)\2"+
		"\2\u01d4\u01d5\5s:\2\u01d5\u01d6\7)\2\2\u01d6l\3\2\2\2\u01d7\u01d8\7v"+
		"\2\2\u01d8\u01d9\7k\2\2\u01d9\u01da\7o\2\2\u01da\u01db\7g\2\2\u01db\u01dc"+
		"\7u\2\2\u01dc\u01dd\7v\2\2\u01dd\u01de\7c\2\2\u01de\u01df\7o\2\2\u01df"+
		"\u01e0\7r\2\2\u01e0\u01e1\3\2\2\2\u01e1\u01e2\7)\2\2\u01e2\u01e3\5q9\2"+
		"\u01e3\u01e4\5s:\2\u01e4\u01e5\7)\2\2\u01e5n\3\2\2\2\u01e6\u01e7\7v\2"+
		"\2\u01e7\u01e8\7k\2\2\u01e8\u01e9\7o\2\2\u01e9\u01ea\7g\2\2\u01ea\u01eb"+
		"\7u\2\2\u01eb\u01ec\7v\2\2\u01ec\u01ed\7c\2\2\u01ed\u01ee\7o\2\2\u01ee"+
		"\u01ef\7r\2\2\u01ef\u01f0\3\2\2\2\u01f0\u01f1\7)\2\2\u01f1\u01f2\5q9\2"+
		"\u01f2\u01f3\5u;\2\u01f3\u01f4\7)\2\2\u01f4p\3\2\2\2\u01f5\u01f6\5]/\2"+
		"\u01f6\u01f7\t\13\2\2\u01f7\u01f8\7/\2\2\u01f8\u01f9\5]/\2\u01f9\u01fa"+
		"\t\f\2\2\u01fa\u01fb\7/\2\2\u01fb\u01fc\5]/\2\u01fc\u01fd\t\f\2\2\u01fd"+
		"r\3\2\2\2\u01fe\u01ff\5]/\2\u01ff\u0200\t\f\2\2\u0200\u0201\7<\2\2\u0201"+
		"\u0202\5]/\2\u0202\u0207\t\f\2\2\u0203\u0204\7<\2\2\u0204\u0205\5]/\2"+
		"\u0205\u0206\t\f\2\2\u0206\u0208\3\2\2\2\u0207\u0203\3\2\2\2\u0207\u0208"+
		"\3\2\2\2\u0208t\3\2\2\2\u0209\u020a\5]/\2\u020a\u020b\t\f\2\2\u020b\u020c"+
		"\7<\2\2\u020c\u020d\5]/\2\u020d\u020e\t\f\2\2\u020e\u020f\7<\2\2\u020f"+
		"\u0210\5]/\2\u0210\u0215\t\f\2\2\u0211\u0212\7\60\2\2\u0212\u0213\5]/"+
		"\2\u0213\u0214\t\r\2\2\u0214\u0216\3\2\2\2\u0215\u0211\3\2\2\2\u0215\u0216"+
		"\3\2\2\2\u0216v\3\2\2\2\u0217\u0218\t\16\2\2\u0218x\3\2\2\2\u0219\u021a"+
		"\t\17\2\2\u021az\3\2\2\2\u021b\u021c\t\20\2\2\u021c|\3\2\2\2\u021d\u021e"+
		"\t\21\2\2\u021e~\3\2\2\2\u021f\u0220\t\n\2\2\u0220\u0080\3\2\2\2\u0221"+
		"\u0222\t\22\2\2\u0222\u0082\3\2\2\2\u0223\u0224\t\23\2\2\u0224\u0084\3"+
		"\2\2\2\u0225\u0226\t\24\2\2\u0226\u0086\3\2\2\2\u0227\u0228\t\25\2\2\u0228"+
		"\u0088\3\2\2\2\u0229\u022a\t\26\2\2\u022a\u008a\3\2\2\2\u022b\u022c\t"+
		"\27\2\2\u022c\u008c\3\2\2\2\u022d\u022e\t\30\2\2\u022e\u008e\3\2\2\2\u022f"+
		"\u0230\t\31\2\2\u0230\u0090\3\2\2\2\u0231\u0232\t\32\2\2\u0232\u0092\3"+
		"\2\2\2\u0233\u0234\t\33\2\2\u0234\u0094\3\2\2\2\u0235\u0236\t\34\2\2\u0236"+
		"\u0096\3\2\2\2\u0237\u0238\t\35\2\2\u0238\u0098\3\2\2\2\u0239\u023a\t"+
		"\36\2\2\u023a\u009a\3\2\2\2\u023b\u023c\t\37\2\2\u023c\u009c\3\2\2\2\u023d"+
		"\u023e\t \2\2\u023e\u009e\3\2\2\2\u023f\u0240\t!\2\2\u0240\u00a0\3\2\2"+
		"\2\u0241\u0242\t\"\2\2\u0242\u00a2\3\2\2\2\u0243\u0244\t#\2\2\u0244\u00a4"+
		"\3\2\2\2\u0245\u0246\t$\2\2\u0246\u00a6\3\2\2\2\u0247\u0248\t%\2\2\u0248"+
		"\u00a8\3\2\2\2\u0249\u024a\t&\2\2\u024a\u00aa\3\2\2\2#\2\u0108\u010c\u011f"+
		"\u0121\u012f\u0132\u0134\u0146\u0150\u0154\u0160\u0169\u016c\u016e\u0172"+
		"\u0174\u017a\u017c\u0185\u0188\u018f\u0196\u019b\u019d\u01a1\u01a8\u01b1"+
		"\u01b4\u01b9\u01c1\u0207\u0215\5\3#\2\3$\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}